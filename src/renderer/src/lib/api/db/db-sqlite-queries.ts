import {
    DATABASE_TABLES,
    PROGRAMMING_LANGUAGE_CS,
    PROGRAMMING_LANGUAGE_TYPES,
    ROUTINE_TYPES,
    ROUTINE_TYPE_IMPORT,
    TABLE_ACTORS,
    TABLE_ACTOR_PRINCIPAL,
    TABLE_AUTO_COMPLETES,
    TABLE_CONVERSATIONS,
    TABLE_EDGES,
    TABLE_FILTERS,
    TABLE_LOCALES,
    TABLE_LOCALE_PRINCIPAL,
    TABLE_LOCALIZATIONS,
    TABLE_NODES,
    TABLE_PROGRAMMING_LANGUAGES,
    TABLE_PROGRAMMING_LANGUAGE_PRINCIPAL,
    TABLE_ROUTINES,
    TABLE_ROUTINE_TYPES,
    TABLE_TABLES,
    type DatabaseTableType,
    type ProgrammingLanguageType,
} from '@common/common-types';
import { ACTORS_DEFAULT_COLOR } from '@lib/constants/settings';
import { localeIdToColumn } from '@lib/utility/locale';

///
/// Table Creation
///
const CREATE_TABLE_TABLES = `
CREATE TABLE IF NOT EXISTS "${TABLE_TABLES.name}" (
	"id"	INTEGER,
	"name"	TEXT NOT NULL UNIQUE,
	PRIMARY KEY("id" AUTOINCREMENT),
	UNIQUE("name")
);
`;
const CREATE_TABLE_AUTO_COMPLETES = `
CREATE TABLE IF NOT EXISTS "${TABLE_AUTO_COMPLETES.name}" (
	"id"	INTEGER,
	"name"	TEXT,
	"icon"	INTEGER NOT NULL,
	"rule"	INTEGER NOT NULL,
	"insertion"	TEXT,
	"documentation"	TEXT,
	PRIMARY KEY("id" AUTOINCREMENT)
);
`;
const CREATE_TABLE_PROGRAMMING_LANGUAGES = `
CREATE TABLE IF NOT EXISTS "${TABLE_PROGRAMMING_LANGUAGES.name}" (
	"id"	INTEGER,
	"name"	TEXT NOT NULL UNIQUE,
	PRIMARY KEY("id" AUTOINCREMENT)
);
`;
const CREATE_TABLE_PROGRAMMING_LANGUAGE_PRINCIPAL = `
CREATE TABLE IF NOT EXISTS "${TABLE_PROGRAMMING_LANGUAGE_PRINCIPAL.name}" (
	"id"	INTEGER,
	"principal"	INTEGER,
	PRIMARY KEY("id" AUTOINCREMENT),
	FOREIGN KEY("principal") REFERENCES "${TABLE_PROGRAMMING_LANGUAGES.name}"
);
`;
const CREATE_TABLE_FILTERS = `
CREATE TABLE IF NOT EXISTS "${TABLE_FILTERS.name}" (
	"id"	INTEGER,
	"name"	TEXT NOT NULL,
	"notes"	TEXT,
	PRIMARY KEY("id" AUTOINCREMENT)
);
`;
const CREATE_TABLE_CONVERSATIONS = `
CREATE TABLE IF NOT EXISTS "${TABLE_CONVERSATIONS.name}" (
	"id"	INTEGER,
	"name"	TEXT NOT NULL,
	"isSystemCreated"	INTEGER NOT NULL,
	"notes"	TEXT,
	"isDeleted"	INTEGER NOT NULL,
	"layoutAuto"	INTEGER NOT NULL,
	"layoutVertical"	INTEGER NOT NULL,
	PRIMARY KEY("id" AUTOINCREMENT)
);
`;
const CREATE_TABLE_ROUTINE_TYPES = `
CREATE TABLE IF NOT EXISTS "${TABLE_ROUTINE_TYPES.name}" (
	"id"	INTEGER,
	"name"	TEXT NOT NULL UNIQUE,
	PRIMARY KEY("id" AUTOINCREMENT)
);
`;
const CREATE_TABLE_ROUTINES = `
CREATE TABLE IF NOT EXISTS "${TABLE_ROUTINES.name}" (
	"id"	INTEGER,
	"name"	TEXT,
	"code"	TEXT,
	"type"	INTEGER NOT NULL,
	"notes"	TEXT,
	"isSystemCreated"	INTEGER NOT NULL,
	"parent"	INTEGER,
	PRIMARY KEY("id" AUTOINCREMENT),
	FOREIGN KEY("type") REFERENCES "${TABLE_ROUTINE_TYPES.name}",
	FOREIGN KEY("parent") REFERENCES "${TABLE_CONVERSATIONS.name}"
);
`;
const CREATE_TABLE_LOCALES = `
CREATE TABLE IF NOT EXISTS "${TABLE_LOCALES.name}" (
	"id"	INTEGER,
	"name"	TEXT NOT NULL,
	"isSystemCreated"	INTEGER NOT NULL,
	PRIMARY KEY("id" AUTOINCREMENT)
);
`;
const CREATE_TABLE_LOCALE_PRINCIPAL = `
CREATE TABLE IF NOT EXISTS "${TABLE_LOCALE_PRINCIPAL.name}" (
	"id"	INTEGER,
	"principal"	INTEGER,
	PRIMARY KEY("id" AUTOINCREMENT),
	FOREIGN KEY("principal") REFERENCES "${TABLE_LOCALES.name}"
);
`;
const DEFAULT_LOCALE_ID = 0;
const CREATE_TABLE_LOCALIZATIONS = `
CREATE TABLE IF NOT EXISTS "${TABLE_LOCALIZATIONS.name}" (
	"id"	INTEGER,
	"name"	TEXT,
	"parent"	INTEGER,
	"isSystemCreated"	INTEGER NOT NULL,
	"${localeIdToColumn(DEFAULT_LOCALE_ID)}"	TEXT,
	FOREIGN KEY("parent") REFERENCES "${TABLE_CONVERSATIONS.name}",
	PRIMARY KEY("id" AUTOINCREMENT)
);
`;
const CREATE_TABLE_ACTORS = `
CREATE TABLE IF NOT EXISTS "${TABLE_ACTORS.name}" (
    "id"	INTEGER,
    "name"	TEXT NOT NULL,
    "color"	TEXT NOT NULL,
    "localizedName"	INTEGER,
	"isSystemCreated"	INTEGER NOT NULL,
    FOREIGN KEY("localizedName") REFERENCES "${TABLE_LOCALIZATIONS.name}",
    PRIMARY KEY("id" AUTOINCREMENT)
);
`;
const CREATE_TABLE_ACTOR_PRINCIPAL = `
CREATE TABLE IF NOT EXISTS "${TABLE_ACTOR_PRINCIPAL.name}" (
    "id"	INTEGER,
    "principal"	INTEGER,
    FOREIGN KEY("principal") REFERENCES "${TABLE_ACTORS.name}",
    PRIMARY KEY("id" AUTOINCREMENT)
);
`;
const CREATE_TABLE_NODES = `
CREATE TABLE IF NOT EXISTS "${TABLE_NODES.name}" (
	"id"	INTEGER,
	"name"	TEXT,
	"parent"	INTEGER NOT NULL,
	"actor"	INTEGER NOT NULL,
	"uiResponseText"	INTEGER NOT NULL,
	"voiceText"	INTEGER NOT NULL,
	"condition"	INTEGER NOT NULL,
	"code"	INTEGER NOT NULL,
	"codeOverride"	INTEGER,
	"preventResponse"	INTEGER DEFAULT 0,
	"notes"	TEXT,
	"isSystemCreated"	INTEGER NOT NULL,
	"link"	INTEGER,
	"type"	TEXT NOT NULL,
	"positionX"	NUMERIC DEFAULT 0,
	"positionY"	NUMERIC DEFAULT 0,
	FOREIGN KEY("uiResponseText") REFERENCES "${TABLE_LOCALIZATIONS.name}",
	FOREIGN KEY("actor") REFERENCES "${TABLE_ACTORS.name}",
	FOREIGN KEY("voiceText") REFERENCES "${TABLE_LOCALIZATIONS.name}",
	FOREIGN KEY("parent") REFERENCES "${TABLE_CONVERSATIONS.name}",
	FOREIGN KEY("condition") REFERENCES "${TABLE_ROUTINES.name}",
	FOREIGN KEY("code") REFERENCES "${TABLE_ROUTINES.name}",
	FOREIGN KEY("link") REFERENCES "${TABLE_NODES.name}",
	PRIMARY KEY("id" AUTOINCREMENT)
);
`;
const CREATE_TABLE_EDGES = `
CREATE TABLE IF NOT EXISTS "${TABLE_EDGES.name}" (
	"id"	INTEGER,
	"name"	TEXT,
	"parent"	INTEGER NOT NULL,
	"priority"	INTEGER DEFAULT 0,
	"notes"	TEXT,
	"type"	TEXT NOT NULL,
	"source"	INTEGER NOT NULL,
	"target"	INTEGER NOT NULL,
	FOREIGN KEY("parent") REFERENCES "${TABLE_CONVERSATIONS.name}",
	FOREIGN KEY("source") REFERENCES "${TABLE_NODES.name}",
	FOREIGN KEY("target") REFERENCES "${TABLE_NODES.name}",
	UNIQUE(parent, source, target),
	PRIMARY KEY("id" AUTOINCREMENT)
);
`;

export const CREATE_TABLE_QUERIES = [
    CREATE_TABLE_TABLES,
    CREATE_TABLE_AUTO_COMPLETES,
    CREATE_TABLE_PROGRAMMING_LANGUAGES,
    CREATE_TABLE_PROGRAMMING_LANGUAGE_PRINCIPAL,
    CREATE_TABLE_FILTERS,
    CREATE_TABLE_CONVERSATIONS,
    CREATE_TABLE_ROUTINE_TYPES,
    CREATE_TABLE_ROUTINES,
    CREATE_TABLE_LOCALES,
    CREATE_TABLE_LOCALE_PRINCIPAL,
    CREATE_TABLE_LOCALIZATIONS,
    CREATE_TABLE_ACTORS,
    CREATE_TABLE_ACTOR_PRINCIPAL,
    CREATE_TABLE_NODES,
    CREATE_TABLE_EDGES,
];

///
/// Table Initialization
///
let rowIndex: number;
// Tables
const INITIALIZE_TABLES = `
BEGIN TRANSACTION;
${DATABASE_TABLES.map(
    (table: DatabaseTableType) =>
        `INSERT OR IGNORE INTO ${TABLE_TABLES.name} (id, name) VALUES (${table.id}, '${table.name}');`,
).join('\n')}
COMMIT;
`;
// Auto-Completes
// Programming Languages
const INITIALIZE_PROGRAMMING_LANGUAGES = `
BEGIN TRANSACTION;
${PROGRAMMING_LANGUAGE_TYPES.map(
    (languageType: ProgrammingLanguageType) =>
        `INSERT OR IGNORE INTO ${TABLE_PROGRAMMING_LANGUAGES.name} (id, name) VALUES (${languageType.id}, '${languageType.name}');`,
).join('\n')}
COMMIT;
`;
// Programming Language Principal
rowIndex = 0;
const INITIALIZE_PROGRAMMING_LANGUAGE_PRINCIPAL = `
INSERT OR IGNORE INTO ${
    TABLE_PROGRAMMING_LANGUAGE_PRINCIPAL.name
} (id, principal) VALUES (${rowIndex++}, ${PROGRAMMING_LANGUAGE_CS.id});`;
// Routine Types
rowIndex = 0;
const INITIALIZE_ROUTINE_TYPES = `
BEGIN TRANSACTION;
${ROUTINE_TYPES.map(
    (routineType) =>
        `INSERT OR IGNORE INTO ${TABLE_ROUTINE_TYPES.name} (id, name) VALUES (${routineType.id}, '${routineType.name}');`,
).join('\n')}
COMMIT;
`;
// Routines
rowIndex = 0;
const INITIALIZE_ROUTINES = `
BEGIN TRANSACTION;
INSERT OR IGNORE INTO ${
    TABLE_ROUTINES.name
} (id, name, code, type, isSystemCreated) VALUES (${rowIndex++}, 'Import Statements', '', ${
    ROUTINE_TYPE_IMPORT.id
}, true);
COMMIT;
`;
// Conversations
// Locales
rowIndex = DEFAULT_LOCALE_ID;
const INITIALIZE_LOCALES = `
INSERT OR IGNORE INTO ${
    TABLE_LOCALES.name
} (id, name, isSystemCreated) VALUES (${rowIndex++}, 'en_US', true);`;
// Locale Principal
rowIndex = 0;
const INITIALIZE_LOCALE_PRINCIPAL = `
INSERT OR IGNORE INTO ${
    TABLE_LOCALE_PRINCIPAL.name
} (id, principal) VALUES (${rowIndex++}, ${DEFAULT_LOCALE_ID});`;
// Localizations
rowIndex = 0;
const DEFAULT_LOCALIZATION_ID = rowIndex;
const INITIALIZE_LOCALIZATIONS = `
INSERT OR IGNORE INTO ${
    TABLE_LOCALIZATIONS.name
} (id, parent, isSystemCreated, name, '${localeIdToColumn(
    DEFAULT_LOCALE_ID,
)}') VALUES (${rowIndex++}, NULL, true, 'Player Name', 'Player');`;
// Actors
rowIndex = 0;
const DEFAULT_ACTOR_ID = rowIndex;
const INITIALIZE_ACTORS = `
INSERT OR IGNORE INTO ${
    TABLE_ACTORS.name
} (id, name, color, localizedName, isSystemCreated) VALUES (${rowIndex++}, 'Player', '${ACTORS_DEFAULT_COLOR}', ${DEFAULT_LOCALIZATION_ID}, true);`;
// Actor Principal
rowIndex = 0;
const INITIALIZE_ACTOR_PRINCIPAL = `
INSERT OR IGNORE INTO ${
    TABLE_ACTOR_PRINCIPAL.name
} (id, principal) VALUES (${rowIndex++}, ${DEFAULT_ACTOR_ID});`;
// Nodes
export const INITIALIZE_TABLE_QUERIES = [
    INITIALIZE_TABLES,
    INITIALIZE_PROGRAMMING_LANGUAGES,
    INITIALIZE_PROGRAMMING_LANGUAGE_PRINCIPAL,
    INITIALIZE_ROUTINE_TYPES,
    INITIALIZE_ROUTINES,
    INITIALIZE_LOCALES,
    INITIALIZE_LOCALE_PRINCIPAL,
    INITIALIZE_LOCALIZATIONS,
    INITIALIZE_ACTORS,
    INITIALIZE_ACTOR_PRINCIPAL,
];
